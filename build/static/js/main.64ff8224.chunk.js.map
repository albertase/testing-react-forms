{"version":3,"sources":["components/Formik.js","components/RestfulApi3.jsx","App.js","index.js"],"names":["Yup","shape","firstName","min","max","required","lastName","email","RestfulApi2","useState","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","cities","setCities","countries","Country","getAllCountries","cityOptions","map","city","value","name","label","htmlFor","className","country","isoCode","onSelect","countryCode","countryCities","City","getCitiesOfCountry","handleCountryChange","selected","searchable","options","find","option","onChange","selectedOption","isSearchable","App","RestfulApi3","ReactDOM","createRoot","document","getElementById","render"],"mappings":"+TAIqBA,MAAaC,MAAM,CACtCC,UAAWF,MACRG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,MACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,MAAOP,MAAaO,MAAM,iBAAiBF,SAAS,c,oDCuCvCG,EA9CK,WAClB,MAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAeMC,EAAYC,IAAQC,kBACpBC,EAAcL,EAAOM,KAAI,SAACC,GAAD,MAAW,CAAEC,MAAOD,EAAKE,KAAMC,MAAOH,EAAKE,KAA3C,IAE/B,OACE,gCACE,gCACE,uBAAOE,QAAQ,UAAf,qBACA,cAAC,IAAD,CACEC,UAAU,iBACVV,UAAWA,EAAUI,KAAI,SAACO,GAAD,OAAaA,EAAQC,OAArB,IACzBC,SAAU,SAACC,GAAD,OAvBU,SAACA,GAC3BnB,EAAmBmB,GACnBjB,EAAgB,IAGhB,IAAMkB,EAAgBC,IAAKC,mBAAmBH,GAC9Cf,EAAUgB,EACX,CAgBkCG,CAAoBJ,EAArC,EACVK,SAAUzB,EACV0B,YAAY,OAGhB,gCACE,uBAAOX,QAAQ,OAAf,kBACA,cAAC,IAAD,CACEY,QAASlB,EACTG,MAAOH,EAAYmB,MAAK,SAACC,GAAD,OAAYA,EAAOjB,QAAUV,CAA7B,IACxB4B,SAxBiB,SAACC,GACxB5B,EAAgB4B,EAAiBA,EAAenB,MAAQ,GACzD,EAuBOoB,cAAc,SAKvB,E,gECtBcC,MAjBf,WACE,OACE,qBAAKjB,UAAU,MAAf,SAUE,cAACkB,EAAD,KAGL,ECrBYC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.64ff8224.chunk.js","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst SignupSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nexport const ValidationSchemaExample = () => {\n    let formIsValid = false;\n    if(!SignupSchema) {\n        formIsValid = true;\n    }\n  return (\n    <div>\n      <h1>Signup</h1>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values) => {\n          // same shape as initial values\n          console.log(values);\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className=\"form-control\">\n            <Field name=\"firstName\" />\n            {errors.firstName && touched.firstName ? (\n              <div style={{ color: \"red\" }}>{errors.firstName}</div>\n            ) : null}\n            <Field name=\"lastName\" />\n            {errors.lastName && touched.lastName ? (\n              <div>{errors.lastName}</div>\n            ) : null}\n            <Field name=\"email\" type=\"email\" />\n            {errors.email && touched.email ? <div>{errors.email}</div> : null}\n            <button disabled={!formIsValid} type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select';\n// import 'react-flags-select/css/react-flags-select.css';\nimport Select from 'react-select';\n\nconst RestfulApi2 = () => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = (countryCode) => {\n    setSelectedCountry(countryCode);\n    setSelectedCity('');\n\n    // Get cities of the selected country\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = (selectedOption) => {\n    setSelectedCity(selectedOption ? selectedOption.value : '');\n  };\n\n  const countries = Country.getAllCountries();\n  const cityOptions = cities.map((city) => ({ value: city.name, label: city.name }));\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"country\">Country</label>\n        <FlagsSelect\n          className=\"country-select\"\n          countries={countries.map((country) => country.isoCode)}\n          onSelect={(countryCode) => handleCountryChange(countryCode)}\n          selected={selectedCountry}\n          searchable={true}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City</label>\n        <Select\n          options={cityOptions}\n          value={cityOptions.find((option) => option.value === selectedCity)}\n          onChange={handleCityChange}\n          isSearchable={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n","import BasicForm from './components/BasicForm';\nimport { ValidationSchemaExample } from './components/Formik';\nimport RestfulApi from './components/RestfulApi';\nimport RestfulApi2 from './components/RestfulApi2';\nimport RestfulApi3 from './components/RestfulApi3';\nimport SimpleInput from './components/SimpleInput';\nimport Subscribe from './components/Subscribe';\nimport TestApi from './components/TestApi';\nimport TodoApp from './components/TodoComp/TodoApp';\nimport ChatForm from './components/chatForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <SimpleInput /> */}\n      {/* <ValidationSchemaExample/> */}\n      {/* <BasicForm/> */}\n      {/* <ChatForm/> */}\n      {/* <TestApi/> */}\n      {/* <Subscribe/> */}\n      {/* <TodoApp/> */}\n      {/* <RestfulApi/> */}\n      {/* <RestfulApi2/> */}\n      <RestfulApi3/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}