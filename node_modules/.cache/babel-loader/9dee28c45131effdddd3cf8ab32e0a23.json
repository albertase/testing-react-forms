{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getCountries, getStates, getCities } from 'country-state-city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestfulApi2 = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  useEffect(() => {\n    // Fetch and set the list of countries\n    setCountries(getCountries());\n  }, []);\n  useEffect(() => {\n    // Fetch and set the list of states based on the selected country\n    if (selectedCountry) {\n      const country = countries.find(country => country.isoCode === selectedCountry);\n\n      if (country) {\n        setStates(getStates(country.isoCode));\n      }\n    }\n  }, [selectedCountry, countries]);\n  useEffect(() => {\n    // Fetch and set the list of cities based on the selected state\n    if (selectedState) {\n      setCities(getCities(selectedCountry, selectedState));\n    }\n  }, [selectedState, selectedCountry]);\n\n  const handleCountryChange = e => {\n    setSelectedCountry(e.target.value);\n    setSelectedState('');\n    setSelectedCity('');\n  };\n\n  const handleStateChange = e => {\n    setSelectedState(e.target.value);\n    setSelectedCity('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"\",\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.isoCode,\n          children: country.name\n        }, country.isoCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"\",\n        value: selectedState,\n        onChange: handleStateChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.isoCode,\n          children: state.name\n        }, state.isoCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"\",\n        id: \"\",\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestfulApi2, \"S3F8cbLnGYz6KKAwN4TQ+GBeFqU=\");\n\n_c = RestfulApi2;\nexport default RestfulApi2;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi2\");","map":{"version":3,"names":["React","useState","useEffect","getCountries","getStates","getCities","RestfulApi2","countries","setCountries","selectedCountry","setSelectedCountry","states","setStates","selectedState","setSelectedState","cities","setCities","selectedCity","setSelectedCity","country","find","isoCode","handleCountryChange","e","target","value","handleStateChange","map","name","state","city"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi2.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCountries, getStates, getCities } from 'country-state-city';\n\nconst RestfulApi2 = () => {\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [states, setStates] = useState([]);\n  const [selectedState, setSelectedState] = useState('');\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n\n  useEffect(() => {\n    // Fetch and set the list of countries\n    setCountries(getCountries());\n  }, []);\n\n  useEffect(() => {\n    // Fetch and set the list of states based on the selected country\n    if (selectedCountry) {\n      const country = countries.find((country) => country.isoCode === selectedCountry);\n      if (country) {\n        setStates(getStates(country.isoCode));\n      }\n    }\n  }, [selectedCountry, countries]);\n\n  useEffect(() => {\n    // Fetch and set the list of cities based on the selected state\n    if (selectedState) {\n      setCities(getCities(selectedCountry, selectedState));\n    }\n  }, [selectedState, selectedCountry]);\n\n  const handleCountryChange = (e) => {\n    setSelectedCountry(e.target.value);\n    setSelectedState('');\n    setSelectedCity('');\n  };\n\n  const handleStateChange = (e) => {\n    setSelectedState(e.target.value);\n    setSelectedCity('');\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"\">Country</label>\n        <select name=\"\" id=\"\" value={selectedCountry} onChange={handleCountryChange}>\n          <option value=\"\"></option>\n          {countries.map((country) => (\n            <option key={country.isoCode} value={country.isoCode}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"\">State</label>\n        <select name=\"\" id=\"\" value={selectedState} onChange={handleStateChange}>\n          <option value=\"\"></option>\n          {states.map((state) => (\n            <option key={state.isoCode} value={state.isoCode}>\n              {state.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"\">City</label>\n        <select name=\"\" id=\"\" value={selectedCity} onChange={(e) => setSelectedCity(e.target.value)}>\n          <option value=\"\"></option>\n          {cities.map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}