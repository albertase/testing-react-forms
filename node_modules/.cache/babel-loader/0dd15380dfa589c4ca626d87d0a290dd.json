{"ast":null,"code":"import _objectWithoutProperties from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n    _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n    _excluded3 = [\"strategy\"],\n    _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n    _excluded5 = [\"apply\"];\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n      floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n\n          case 4:\n            rtl = _context.sent;\n            _context.next = 7;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 7:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n\n          case 13:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 46;\n              break;\n            }\n\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 17;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n\n          case 17:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 43;\n              break;\n            }\n\n            resetCount++;\n\n            if (!(typeof reset === 'object')) {\n              _context.next = 41;\n              break;\n            }\n\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n\n            if (!reset.rects) {\n              _context.next = 38;\n              break;\n            }\n\n            if (!(reset.rects === true)) {\n              _context.next = 36;\n              break;\n            }\n\n            _context.next = 33;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 33:\n            _context.t0 = _context.sent;\n            _context.next = 37;\n            break;\n\n          case 36:\n            _context.t0 = reset.rects;\n\n          case 37:\n            rects = _context.t0;\n\n          case 38:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n\n          case 41:\n            i = -1;\n            return _context.abrupt(\"continue\", 43);\n\n          case 43:\n            i++;\n            _context.next = 13;\n            break;\n\n          case 46:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\n\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n\n            x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n            _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n\n          case 15:\n            _context10.t3 = true;\n\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n\n          case 20:\n            _context10.t5 = element.contextElement;\n\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n\n          case 24:\n            _context10.t5 = _context10.sent;\n\n          case 25:\n            _context10.t4 = _context10.t5;\n\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 38;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n          case 38:\n            offsetParent = _context10.sent;\n            _context10.next = 41;\n            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n\n          case 41:\n            if (!_context10.sent) {\n              _context10.next = 50;\n              break;\n            }\n\n            _context10.next = 44;\n            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n\n          case 44:\n            _context10.t13 = _context10.sent;\n\n            if (_context10.t13) {\n              _context10.next = 47;\n              break;\n            }\n\n            _context10.t13 = {\n              x: 1,\n              y: 1\n            };\n\n          case 47:\n            _context10.t12 = _context10.t13;\n            _context10.next = 51;\n            break;\n\n          case 50:\n            _context10.t12 = {\n              x: 1,\n              y: 1\n            };\n\n          case 51:\n            offsetScale = _context10.t12;\n            _context10.t14 = rectToClientRect;\n\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 59;\n              break;\n            }\n\n            _context10.next = 56;\n            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n              rect: rect,\n              offsetParent: offsetParent,\n              strategy: strategy\n            });\n\n          case 56:\n            _context10.t15 = _context10.sent;\n            _context10.next = 60;\n            break;\n\n          case 59:\n            _context10.t15 = rect;\n\n          case 60:\n            _context10.t16 = _context10.t15;\n            elementClientRect = (0, _context10.t14)(_context10.t16);\n            return _context10.abrupt(\"return\", {\n              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n            });\n\n          case 63:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\n\nvar min = Math.min;\nvar max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n\n        var x, y, placement, rects, platform, elements, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements; // Since `element` is required, we don't Partial<> the type.\n\n                _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n\n                if (!(element == null)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 4:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 10;\n                return platform.getDimensions(element);\n\n              case 10:\n                arrowDimensions = _context2.sent;\n                isYAxis = axis === 'y';\n                minProp = isYAxis ? 'top' : 'left';\n                maxProp = isYAxis ? 'bottom' : 'right';\n                clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n\n                _context2.t0 = !clientSize;\n\n                if (_context2.t0) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                _context2.next = 25;\n                return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n\n              case 25:\n                _context2.t0 = !_context2.sent;\n\n              case 26:\n                if (!_context2.t0) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n\n              case 28:\n                centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n                // centered, modify the padding so that it is centered.\n\n                largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n                minPadding = min(paddingObject[minProp], largestPossiblePadding);\n                maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n\n                min$1 = minPadding;\n                max = clientSize - arrowDimensions[length] - maxPadding;\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. This stops `shift()` from taking action, but can\n                // be worked around by calling it again after the `arrow()` if desired.\n\n                shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n                alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset + alignmentOffset), _data)), _ref4));\n\n              case 39:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\n\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n                _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? allPlacements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n                placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n                _context3.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n                currentPlacement = placements[currentIndex];\n\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {});\n\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 26:\n                placementsSortedByMostSpace = allOverflows.map(function (d) {\n                  var alignment = getAlignment(d.placement);\n                  return [d.placement, alignment && crossAxis ? // Check along the mainAxis and main crossAxis side.\n                  d.overflows.slice(0, 2).reduce(function (acc, v) {\n                    return acc + v;\n                  }, 0) : // Check only the mainAxis.\n                  d.overflows[0], d.overflows];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                });\n                placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                  return d[2].slice(0, // Aligned placements should not check their opposite crossAxis\n                  // side.\n                  getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                    return v <= 0;\n                  });\n                });\n                resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 31:\n                return _context3.abrupt(\"return\", {});\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n\n    default:\n      return [];\n  }\n}\n\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n\n  return list;\n}\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n                _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2);\n                side = getSide(placement);\n                isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                _context4.next = 6;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 6:\n                rtl = _context4.sent;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n\n                if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n                }\n\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 12;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 12:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n\n                if (checkCrossAxis) {\n                  _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                  overflows.push(overflow[main], overflow[cross]);\n                }\n\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing.\n\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                nextPlacement = placements[nextIndex];\n\n                if (!nextPlacement) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 23:\n                // First, find the candidates that fit on the mainAxis side of overflow,\n                // then find the placement that fits the best on the main crossAxis side.\n                resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                  return d.overflows[0] <= 0;\n                }).sort(function (a, b) {\n                  return a.overflows[1] - b.overflows[1];\n                })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n\n                if (resetPlacement) {\n                  _context4.next = 33;\n                  break;\n                }\n\n                _context4.t0 = fallbackStrategy;\n                _context4.next = _context4.t0 === 'bestFit' ? 28 : _context4.t0 === 'initialPlacement' ? 31 : 33;\n                break;\n\n              case 28:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d.placement, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0];\n\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n\n                return _context4.abrupt(\"break\", 33);\n\n              case 31:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 33);\n\n              case 33:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 35:\n                return _context4.abrupt(\"return\", {});\n\n              case 36:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = state.rects;\n                _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n                break;\n\n              case 5:\n                _context5.next = 7;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n\n              case 7:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n\n              case 10:\n                _context5.next = 12;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n\n              case 12:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n\n              case 15:\n                return _context5.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\n\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n\n    prevRect = rect;\n  }\n\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined.\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    // Find the first rect in which the point is fully inside.\n                    return clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    }) || fallback;\n                  } // There are 2 or more connected rects.\n\n\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n\n                      var _left = isTop ? firstRect.left : lastRect.left;\n\n                      var _right = isTop ? firstRect.right : lastRect.right;\n\n                      var _width = _right - _left;\n\n                      var _height = _bottom - _top;\n\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n\n                  return fallback;\n                };\n\n                placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n\n                _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n                _context6.t0 = Array;\n                _context6.next = 6;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n\n              case 6:\n                _context6.t1 = _context6.sent;\n\n                if (_context6.t1) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                _context6.t1 = [];\n\n              case 9:\n                _context6.t2 = _context6.t1;\n                nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n                clientRects = getRectsByLine(nativeClientRects);\n                fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n                paddingObject = getSideObjectFromPadding(padding);\n                _context6.next = 16;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n\n              case 16:\n                resetRects = _context6.sent;\n\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context6.next = 19;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n\n              case 19:\n                return _context6.abrupt(\"return\", {});\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = state.placement, platform = state.platform, elements = state.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getMainAxisFromPlacement(placement) === 'x';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = evaluate(options, state); // eslint-disable-next-line prefer-const\n\n            _ref6 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\n\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = state.x, y = state.y;\n                _context7.next = 3;\n                return convertValueToCoords(state, options);\n\n              case 3:\n                diffCoords = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread3;\n\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement;\n                _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                        y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context8.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 5:\n                overflow = _context8.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n\n      var x = state.x,\n          y = state.y,\n          placement = state.placement,\n          rects = state.rects,\n          middlewareData = state.middlewareData;\n\n      var _evaluate6 = evaluate(options, state),\n          _evaluate6$offset = _evaluate6.offset,\n          offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n          _evaluate6$mainAxis = _evaluate6.mainAxis,\n          checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n          _evaluate6$crossAxis = _evaluate6.crossAxis,\n          checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, axis, isXAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n                _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n                _context9.next = 4;\n                return detectOverflow(state, detectOverflowOptions);\n\n              case 4:\n                overflow = _context9.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n                axis = getMainAxisFromPlacement(placement);\n                isXAxis = axis === 'x';\n                _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                heightSide = side;\n                _context9.t0 = alignment;\n                _context9.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                if (!_context9.sent) {\n                  _context9.next = 19;\n                  break;\n                }\n\n                _context9.t1 = 'start';\n                _context9.next = 20;\n                break;\n\n              case 19:\n                _context9.t1 = 'end';\n\n              case 20:\n                _context9.t2 = _context9.t1;\n\n                if (!(_context9.t0 === _context9.t2)) {\n                  _context9.next = 25;\n                  break;\n                }\n\n                _context9.t3 = 'left';\n                _context9.next = 26;\n                break;\n\n              case 25:\n                _context9.t3 = 'right';\n\n              case 26:\n                widthSide = _context9.t3;\n                _context9.next = 31;\n                break;\n\n              case 29:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n\n              case 31:\n                overflowAvailableHeight = height - overflow[heightSide];\n                overflowAvailableWidth = width - overflow[widthSide];\n                noShift = !state.middlewareData.shift;\n                availableHeight = overflowAvailableHeight;\n                availableWidth = overflowAvailableWidth;\n\n                if (isXAxis) {\n                  maximumClippingWidth = width - overflow.left - overflow.right;\n                  availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n                } else {\n                  maximumClippingHeight = height - overflow.top - overflow.bottom;\n                  availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n                }\n\n                if (noShift && !alignment) {\n                  xMin = max(overflow.left, 0);\n                  xMax = max(overflow.right, 0);\n                  yMin = max(overflow.top, 0);\n                  yMax = max(overflow.bottom, 0);\n\n                  if (isXAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                  } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                  }\n                }\n\n                _context9.next = 40;\n                return apply(_objectSpread(_objectSpread({}, state), {}, {\n                  availableWidth: availableWidth,\n                  availableHeight: availableHeight\n                }));\n\n              case 40:\n                _context9.next = 42;\n                return platform.getDimensions(elements.floating);\n\n              case 42:\n                nextDimensions = _context9.sent;\n\n                if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                  _context9.next = 45;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n\n              case 45:\n                return _context9.abrupt(\"return\", {});\n\n              case 46:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","name","fn","initialPlacement","elements","nextX","nextY","data","reset","evaluate","value","param","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","state","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","min","Math","max","within","min$1","max$1","arrow","getDimensions","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","center","offset","shouldAddOffset","alignmentOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","crossAxis","detectOverflowOptions","placements","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","_placementsThatFitOnE","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$filter","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","getBoundingClientRect","clientRects","find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","nativeClientRects","from","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","isXAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}