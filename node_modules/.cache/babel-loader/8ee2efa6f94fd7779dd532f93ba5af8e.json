{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: 'United States',\n  isoCode: 'US'\n}, {\n  name: 'Canada',\n  isoCode: 'CA'\n} // Add more countries as needed\n];\nconst statesByCountry = {\n  US: [{\n    name: 'California',\n    isoCode: 'CA'\n  }, {\n    name: 'New York',\n    isoCode: 'NY'\n  } // Add more states for the United States\n  ],\n  CA: [{\n    name: 'Ontario',\n    isoCode: 'ON'\n  }, {\n    name: 'Quebec',\n    isoCode: 'QC'\n  } // Add more states for Canada\n  ] // Add more states for other countries as needed\n\n};\nconst citiesByState = {\n  CA: [{\n    name: 'Los Angeles'\n  }, {\n    name: 'San Francisco'\n  } // Add more cities for California\n  ],\n  NY: [{\n    name: 'New York City'\n  }, {\n    name: 'Buffalo'\n  } // Add more cities for New York\n  ],\n  ON: [{\n    name: 'Toronto'\n  }, {\n    name: 'Ottawa'\n  } // Add more cities for Ontario\n  ],\n  QC: [{\n    name: 'Montreal'\n  }, {\n    name: 'Quebec City'\n  } // Add more cities for Quebec\n  ] // Add more cities for other states as needed\n\n};\n\nconst RestfulApi2 = () => {\n  _s();\n\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n\n  const handleCountryChange = event => {\n    setSelectedCountry(event.target.value);\n    setSelectedState('');\n    setSelectedCity('');\n  };\n\n  const handleStateChange = event => {\n    setSelectedState(event.target.value);\n    setSelectedCity('');\n  };\n\n  const handleCityChange = event => {\n    setSelectedCity(event.target.value);\n  };\n\n  const getStatesOfCountry = countryIsoCode => {\n    return statesByCountry[countryIsoCode] || [];\n  };\n\n  const getCitiesOfState = stateIsoCode => {\n    return citiesByState[stateIsoCode] || [];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"country\",\n        id: \"country\",\n        value: selectedCountry,\n        onChange: handleCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.isoCode,\n          children: country.name\n        }, country.isoCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"state\",\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"state\",\n        id: \"state\",\n        value: selectedState,\n        onChange: handleStateChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), getStatesOfCountry(selectedCountry).map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.isoCode,\n          children: state.name\n        }, state.isoCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"city\",\n        id: \"city\",\n        value: selectedCity,\n        onChange: handleCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), getCitiesOfState(selectedState).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestfulApi2, \"FR4GcpE1H/gVDccq4JcJzXk5piQ=\");\n\n_c = RestfulApi2;\nexport default RestfulApi2;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi2\");","map":{"version":3,"names":["React","useState","countries","name","isoCode","statesByCountry","US","CA","citiesByState","NY","ON","QC","RestfulApi2","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","handleCountryChange","event","target","value","handleStateChange","handleCityChange","getStatesOfCountry","countryIsoCode","getCitiesOfState","stateIsoCode","map","country","state","city"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi2.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst countries = [\n  { name: 'United States', isoCode: 'US' },\n  { name: 'Canada', isoCode: 'CA' },\n  // Add more countries as needed\n];\n\nconst statesByCountry = {\n  US: [\n    { name: 'California', isoCode: 'CA' },\n    { name: 'New York', isoCode: 'NY' },\n    // Add more states for the United States\n  ],\n  CA: [\n    { name: 'Ontario', isoCode: 'ON' },\n    { name: 'Quebec', isoCode: 'QC' },\n    // Add more states for Canada\n  ],\n  // Add more states for other countries as needed\n};\n\nconst citiesByState = {\n  CA: [\n    { name: 'Los Angeles' },\n    { name: 'San Francisco' },\n    // Add more cities for California\n  ],\n  NY: [\n    { name: 'New York City' },\n    { name: 'Buffalo' },\n    // Add more cities for New York\n  ],\n  ON: [\n    { name: 'Toronto' },\n    { name: 'Ottawa' },\n    // Add more cities for Ontario\n  ],\n  QC: [\n    { name: 'Montreal' },\n    { name: 'Quebec City' },\n    // Add more cities for Quebec\n  ],\n  // Add more cities for other states as needed\n};\n\nconst RestfulApi2 = () => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n\n  const handleCountryChange = (event) => {\n    setSelectedCountry(event.target.value);\n    setSelectedState('');\n    setSelectedCity('');\n  };\n\n  const handleStateChange = (event) => {\n    setSelectedState(event.target.value);\n    setSelectedCity('');\n  };\n\n  const handleCityChange = (event) => {\n    setSelectedCity(event.target.value);\n  };\n\n  const getStatesOfCountry = (countryIsoCode) => {\n    return statesByCountry[countryIsoCode] || [];\n  };\n\n  const getCitiesOfState = (stateIsoCode) => {\n    return citiesByState[stateIsoCode] || [];\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"country\">Country</label>\n        <select name=\"country\" id=\"country\" value={selectedCountry} onChange={handleCountryChange}>\n          <option value=\"\"></option>\n          {countries.map((country) => (\n            <option key={country.isoCode} value={country.isoCode}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"state\">State</label>\n        <select name=\"state\" id=\"state\" value={selectedState} onChange={handleStateChange}>\n          <option value=\"\"></option>\n          {getStatesOfCountry(selectedCountry).map((state) => (\n            <option key={state.isoCode} value={state.isoCode}>\n              {state.name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"city\">City</label>\n        <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleCityChange}>\n          <option value=\"\"></option>\n          {getCitiesOfState(selectedState).map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}