{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi3.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select'; // import 'react-flags-select/css/react-flags-select.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestfulApi2 = () => {\n  _s();\n\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = countryCode => {\n    setSelectedCountry(countryCode);\n    setSelectedCity(''); // Get cities of the selected country\n\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = event => {\n    setSelectedCity(event.target.value);\n  };\n\n  const countries = Country.getAllCountries();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlagsSelect, {\n        countries: countries,\n        customLabels: {\n          US: 'United States'\n        } // If you want to customize any country label\n        ,\n        selected: selectedCountry,\n        onSelect: countryCode => handleCountryChange(countryCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"city\",\n        id: \"city\",\n        value: selectedCity,\n        onChange: handleCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.name,\n          children: city.name\n        }, city.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestfulApi2, \"PIoTUyTjhVnfLyZQwoged/3WsAg=\");\n\n_c = RestfulApi2;\nexport default RestfulApi2;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi2\");","map":{"version":3,"names":["React","useState","Country","City","FlagsSelect","RestfulApi2","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","cities","setCities","handleCountryChange","countryCode","countryCities","getCitiesOfCountry","handleCityChange","event","target","value","countries","getAllCountries","US","map","city","name"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi3.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select';\n// import 'react-flags-select/css/react-flags-select.css';\n\nconst RestfulApi2 = () => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = (countryCode) => {\n    setSelectedCountry(countryCode);\n    setSelectedCity('');\n\n    // Get cities of the selected country\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = (event) => {\n    setSelectedCity(event.target.value);\n  };\n\n  const countries = Country.getAllCountries();\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"country\">Country</label>\n        <FlagsSelect\n          countries={countries}\n          customLabels={{ US: 'United States' }} // If you want to customize any country label\n          selected={selectedCountry}\n          onSelect={(countryCode) => handleCountryChange(countryCode)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City</label>\n        <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleCityChange}>\n          <option value=\"\"></option>\n          {cities.map((city) => (\n            <option key={city.name} value={city.name}>\n              {city.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMW,mBAAmB,GAAIC,WAAD,IAAiB;IAC3CN,kBAAkB,CAACM,WAAD,CAAlB;IACAJ,eAAe,CAAC,EAAD,CAAf,CAF2C,CAI3C;;IACA,MAAMK,aAAa,GAAGX,IAAI,CAACY,kBAAL,CAAwBF,WAAxB,CAAtB;IACAF,SAAS,CAACG,aAAD,CAAT;EACD,CAPD;;EASA,MAAME,gBAAgB,GAAIC,KAAD,IAAW;IAClCR,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAGlB,OAAO,CAACmB,eAAR,EAAlB;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAO,OAAO,EAAC,SAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QACE,SAAS,EAAED,SADb;QAEE,YAAY,EAAE;UAAEE,EAAE,EAAE;QAAN,CAFhB,CAEyC;QAFzC;QAGE,QAAQ,EAAEhB,eAHZ;QAIE,QAAQ,EAAGO,WAAD,IAAiBD,mBAAmB,CAACC,WAAD;MAJhD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,IAAI,EAAC,MAAb;QAAoB,EAAE,EAAC,MAAvB;QAA8B,KAAK,EAAEL,YAArC;QAAmD,QAAQ,EAAEQ,gBAA7D;QAAA,wBACE;UAAQ,KAAK,EAAC;QAAd;UAAA;UAAA;UAAA;QAAA,QADF,EAEGN,MAAM,CAACa,GAAP,CAAYC,IAAD,iBACV;UAAwB,KAAK,EAAEA,IAAI,CAACC,IAApC;UAAA,UACGD,IAAI,CAACC;QADR,GAAaD,IAAI,CAACC,IAAlB;UAAA;UAAA;UAAA;QAAA,QADD,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CA5CD;;GAAMpB,W;;KAAAA,W;AA8CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}