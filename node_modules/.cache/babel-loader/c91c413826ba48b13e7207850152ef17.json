{"ast":null,"code":"import stateList from './assets/state.json';\nimport { findEntryByCode, findStateByCodeAndCountryCode, compare } from './utils'; // Get a list of all states.\n\nexport function getAllStates() {\n  return stateList;\n} // Get a list of states belonging to a specific country.\n\nexport function getStatesOfCountry() {\n  let countryCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  if (!countryCode) return []; // get data from file or cache\n\n  const states = stateList.filter(value => {\n    return value.countryCode === countryCode;\n  });\n  return states.sort(compare);\n}\nexport function getStateByCodeAndCountry(stateCode, countryCode) {\n  if (!stateCode) return undefined;\n  if (!countryCode) return undefined;\n  return findStateByCodeAndCountryCode(stateList, stateCode, countryCode);\n} // to be deprecate\n\nexport function getStateByCode(isoCode) {\n  // eslint-disable-next-line no-console\n  console.warn(`WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!`);\n  if (!isoCode) return undefined;\n  return findEntryByCode(stateList, isoCode);\n}\n\nfunction sortByIsoCode(countries) {\n  return countries.sort((a, b) => {\n    return compare(a, b, entity => {\n      return `${entity.countryCode}-${entity.isoCode}`;\n    });\n  });\n}\n\nexport default {\n  getAllStates,\n  getStatesOfCountry,\n  getStateByCodeAndCountry,\n  getStateByCode,\n  sortByIsoCode\n};","map":{"version":3,"names":["stateList","findEntryByCode","findStateByCodeAndCountryCode","compare","getAllStates","getStatesOfCountry","countryCode","states","filter","value","sort","getStateByCodeAndCountry","stateCode","undefined","getStateByCode","isoCode","console","warn","sortByIsoCode","countries","a","b","entity"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/country-state-city/lib/state.js"],"sourcesContent":["import stateList from './assets/state.json';\nimport { findEntryByCode, findStateByCodeAndCountryCode, compare } from './utils';\n// Get a list of all states.\nexport function getAllStates() {\n    return stateList;\n}\n// Get a list of states belonging to a specific country.\nexport function getStatesOfCountry(countryCode = '') {\n    if (!countryCode)\n        return [];\n    // get data from file or cache\n    const states = stateList.filter((value) => {\n        return value.countryCode === countryCode;\n    });\n    return states.sort(compare);\n}\nexport function getStateByCodeAndCountry(stateCode, countryCode) {\n    if (!stateCode)\n        return undefined;\n    if (!countryCode)\n        return undefined;\n    return findStateByCodeAndCountryCode(stateList, stateCode, countryCode);\n}\n// to be deprecate\nexport function getStateByCode(isoCode) {\n    // eslint-disable-next-line no-console\n    console.warn(`WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!`);\n    if (!isoCode)\n        return undefined;\n    return findEntryByCode(stateList, isoCode);\n}\nfunction sortByIsoCode(countries) {\n    return countries.sort((a, b) => {\n        return compare(a, b, (entity) => {\n            return `${entity.countryCode}-${entity.isoCode}`;\n        });\n    });\n}\nexport default {\n    getAllStates,\n    getStatesOfCountry,\n    getStateByCodeAndCountry,\n    getStateByCode,\n    sortByIsoCode,\n};\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,SAASC,eAAT,EAA0BC,6BAA1B,EAAyDC,OAAzD,QAAwE,SAAxE,C,CACA;;AACA,OAAO,SAASC,YAAT,GAAwB;EAC3B,OAAOJ,SAAP;AACH,C,CACD;;AACA,OAAO,SAASK,kBAAT,GAA8C;EAAA,IAAlBC,WAAkB,uEAAJ,EAAI;EACjD,IAAI,CAACA,WAAL,EACI,OAAO,EAAP,CAF6C,CAGjD;;EACA,MAAMC,MAAM,GAAGP,SAAS,CAACQ,MAAV,CAAkBC,KAAD,IAAW;IACvC,OAAOA,KAAK,CAACH,WAAN,KAAsBA,WAA7B;EACH,CAFc,CAAf;EAGA,OAAOC,MAAM,CAACG,IAAP,CAAYP,OAAZ,CAAP;AACH;AACD,OAAO,SAASQ,wBAAT,CAAkCC,SAAlC,EAA6CN,WAA7C,EAA0D;EAC7D,IAAI,CAACM,SAAL,EACI,OAAOC,SAAP;EACJ,IAAI,CAACP,WAAL,EACI,OAAOO,SAAP;EACJ,OAAOX,6BAA6B,CAACF,SAAD,EAAYY,SAAZ,EAAuBN,WAAvB,CAApC;AACH,C,CACD;;AACA,OAAO,SAASQ,cAAT,CAAwBC,OAAxB,EAAiC;EACpC;EACAC,OAAO,CAACC,IAAR,CAAc,gHAAd;EACA,IAAI,CAACF,OAAL,EACI,OAAOF,SAAP;EACJ,OAAOZ,eAAe,CAACD,SAAD,EAAYe,OAAZ,CAAtB;AACH;;AACD,SAASG,aAAT,CAAuBC,SAAvB,EAAkC;EAC9B,OAAOA,SAAS,CAACT,IAAV,CAAe,CAACU,CAAD,EAAIC,CAAJ,KAAU;IAC5B,OAAOlB,OAAO,CAACiB,CAAD,EAAIC,CAAJ,EAAQC,MAAD,IAAY;MAC7B,OAAQ,GAAEA,MAAM,CAAChB,WAAY,IAAGgB,MAAM,CAACP,OAAQ,EAA/C;IACH,CAFa,CAAd;EAGH,CAJM,CAAP;AAKH;;AACD,eAAe;EACXX,YADW;EAEXC,kBAFW;EAGXM,wBAHW;EAIXG,cAJW;EAKXI;AALW,CAAf"},"metadata":{},"sourceType":"module"}