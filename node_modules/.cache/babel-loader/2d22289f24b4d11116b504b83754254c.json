{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi3.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select';\nimport 'react-flags-select/css/react-flags-select.css';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestfulApi2 = () => {\n  _s();\n\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = countryCode => {\n    setSelectedCountry(countryCode);\n    setSelectedCity(''); // Get cities of the selected country\n\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = selectedOption => {\n    setSelectedCity(selectedOption ? selectedOption.value : '');\n  };\n\n  const countries = Country.getAllCountries();\n  const cityOptions = cities.map(city => ({\n    value: city.name,\n    label: city.name\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlagsSelect, {\n        className: \"country-select\",\n        countries: countries.map(country => country.isoCode),\n        onSelect: countryCode => handleCountryChange(countryCode),\n        selected: selectedCountry,\n        searchable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: cityOptions,\n        value: cityOptions.find(option => option.value === selectedCity),\n        onChange: handleCityChange,\n        isSearchable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestfulApi2, \"PIoTUyTjhVnfLyZQwoged/3WsAg=\");\n\n_c = RestfulApi2;\nexport default RestfulApi2;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi2\");","map":{"version":3,"names":["React","useState","Country","City","FlagsSelect","Select","RestfulApi2","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","cities","setCities","handleCountryChange","countryCode","countryCities","getCitiesOfCountry","handleCityChange","selectedOption","value","countries","getAllCountries","cityOptions","map","city","name","label","country","isoCode","find","option"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi3.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select';\nimport 'react-flags-select/css/react-flags-select.css';\nimport Select from 'react-select';\n\nconst RestfulApi2 = () => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = (countryCode) => {\n    setSelectedCountry(countryCode);\n    setSelectedCity('');\n\n    // Get cities of the selected country\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = (selectedOption) => {\n    setSelectedCity(selectedOption ? selectedOption.value : '');\n  };\n\n  const countries = Country.getAllCountries();\n  const cityOptions = cities.map((city) => ({ value: city.name, label: city.name }));\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"country\">Country</label>\n        <FlagsSelect\n          className=\"country-select\"\n          countries={countries.map((country) => country.isoCode)}\n          onSelect={(countryCode) => handleCountryChange(countryCode)}\n          selected={selectedCountry}\n          searchable={true}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City</label>\n        <Select\n          options={cityOptions}\n          value={cityOptions.find((option) => option.value === selectedCity)}\n          onChange={handleCityChange}\n          isSearchable={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,+CAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMY,mBAAmB,GAAIC,WAAD,IAAiB;IAC3CN,kBAAkB,CAACM,WAAD,CAAlB;IACAJ,eAAe,CAAC,EAAD,CAAf,CAF2C,CAI3C;;IACA,MAAMK,aAAa,GAAGZ,IAAI,CAACa,kBAAL,CAAwBF,WAAxB,CAAtB;IACAF,SAAS,CAACG,aAAD,CAAT;EACD,CAPD;;EASA,MAAME,gBAAgB,GAAIC,cAAD,IAAoB;IAC3CR,eAAe,CAACQ,cAAc,GAAGA,cAAc,CAACC,KAAlB,GAA0B,EAAzC,CAAf;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAGlB,OAAO,CAACmB,eAAR,EAAlB;EACA,MAAMC,WAAW,GAAGX,MAAM,CAACY,GAAP,CAAYC,IAAD,KAAW;IAAEL,KAAK,EAAEK,IAAI,CAACC,IAAd;IAAoBC,KAAK,EAAEF,IAAI,CAACC;EAAhC,CAAX,CAAX,CAApB;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAO,OAAO,EAAC,SAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QACE,SAAS,EAAC,gBADZ;QAEE,SAAS,EAAEL,SAAS,CAACG,GAAV,CAAeI,OAAD,IAAaA,OAAO,CAACC,OAAnC,CAFb;QAGE,QAAQ,EAAGd,WAAD,IAAiBD,mBAAmB,CAACC,WAAD,CAHhD;QAIE,QAAQ,EAAEP,eAJZ;QAKE,UAAU,EAAE;MALd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAWE;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QACE,OAAO,EAAEe,WADX;QAEE,KAAK,EAAEA,WAAW,CAACO,IAAZ,CAAkBC,MAAD,IAAYA,MAAM,CAACX,KAAP,KAAiBV,YAA9C,CAFT;QAGE,QAAQ,EAAEQ,gBAHZ;QAIE,YAAY,EAAE;MAJhB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA5CD;;GAAMX,W;;KAAAA,W;AA8CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}