{"ast":null,"code":"import _defineProperty from\"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Select from'react-flags-select';import PhoneInput,{formatPhoneNumber}from'react-phone-number-input';import'react-phone-number-input/style.css';import'./chatForm.css';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatForm=function ChatForm(){var _useState=useState({name:'',email:'',gender:'',country:'',// city: '',\nphoneNumber:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),countries=_useState4[0],setCountries=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cities=_useState6[0],setCities=_useState6[1];useEffect(function(){// Fetch country data from the \"restcountries\" API\naxios.get('https://restcountries.com/v3.1/all').then(function(response){var countryData=response.data.map(function(country){return{label:country.name.common,value:country.cca2,code:\"+\".concat(country.callingCodes[0])};});setCountries(countryData);}).catch(function(error){return console.log(error);});},[]);useEffect(function(){// Fetch city data based on the selected country\nif(formData.country!==''){axios.get(\"https://city-api.example.com/cities/\".concat(formData.country)).then(function(response){var cityData=response.data.map(function(city){return city.name;});setCities(cityData);}).catch(function(error){return console.log(error);});}},[formData.country]);var handleInputChange=function handleInputChange(event){var _event$target=event.target,id=_event$target.id,value=_event$target.value;setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},_defineProperty({},id,value));});};var handleCountrySelect=function handleCountrySelect(countryCode){setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},{country:countryCode,city:''});});};var handlePhoneNumberChange=function handlePhoneNumberChange(value){var formattedPhoneNumber=formatPhoneNumber(value);setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},{phoneNumber:formattedPhoneNumber});});};var handleSubmit=function handleSubmit(event){event.preventDefault();// Form validation logic\nif(formData.name.trim()===''){console.log('Please enter your name.');return;}if(formData.email.trim()===''){console.log('Please enter your email.');return;}if(formData.gender===''){console.log('Please select your gender.');return;}if(formData.country===''){console.log('Please select your country.');return;}// if (formData.city === '') {\n//   console.log('Please select your city.');\n//   return;\n// }\nif(formData.phoneNumber.trim()===''){console.log('Please enter your phone number.');return;}// Form submission to server\nconsole.log('Form submitted:',formData);// Add your server submission logic here\n// Reset the form\nsetFormData({name:'',email:'',gender:'',country:'',city:'',phoneNumber:''});};return/*#__PURE__*/_jsx(\"div\",{className:\"chat-form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:formData.name,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Your E-Mail\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:formData.email,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",children:\"Gender\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"gender\",value:formData.gender,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select one\"}),/*#__PURE__*/_jsx(\"option\",{value:\"male\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"female\",children:\"Female\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(Select,{id:\"country\",searchable:true,options:countries,selected:formData.country,onSelect:handleCountrySelect})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"city\",value:formData.city,onChange:handleInputChange,disabled:!formData.country,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select city\"}),cities.map(function(city){return/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city);})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phoneNumber\",children:\"Phone Number\"}),/*#__PURE__*/_jsx(PhoneInput,{id:\"phoneNumber\",defaultCountry:\"US\",value:formData.phoneNumber,onChange:handlePhoneNumberChange,countrySelectComponent:function countrySelectComponent(_ref){var selectedCountry=_ref.selectedCountry;return/*#__PURE__*/_jsx(\"div\",{children:selectedCountry?selectedCountry.code:null});}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})})]})});};export default ChatForm;","map":{"version":3,"names":["React","useState","useEffect","Select","PhoneInput","formatPhoneNumber","axios","ChatForm","name","email","gender","country","phoneNumber","formData","setFormData","countries","setCountries","cities","setCities","get","then","response","countryData","data","map","label","common","value","cca2","code","callingCodes","catch","error","console","log","cityData","city","handleInputChange","event","target","id","prevFormData","handleCountrySelect","countryCode","handlePhoneNumberChange","formattedPhoneNumber","handleSubmit","preventDefault","trim","selectedCountry"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/chatForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-flags-select';\nimport PhoneInput, { formatPhoneNumber } from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport './chatForm.css';\nimport axios from 'axios';\n\nconst ChatForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    gender: '',\n    country: '',\n    // city: '',\n    phoneNumber: '',\n  });\n\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    // Fetch country data from the \"restcountries\" API\n    axios\n      .get('https://restcountries.com/v3.1/all')\n      .then((response) => {\n        const countryData = response.data.map((country) => ({\n          label: country.name.common,\n          value: country.cca2,\n          code: `+${country.callingCodes[0]}`,\n        }));\n        setCountries(countryData);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    // Fetch city data based on the selected country\n    if (formData.country !== '') {\n      axios\n        .get(`https://city-api.example.com/cities/${formData.country}`)\n        .then((response) => {\n          const cityData = response.data.map((city) => city.name);\n          setCities(cityData);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [formData.country]);\n\n  const handleInputChange = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [id]: value,\n    }));\n  };\n\n  const handleCountrySelect = (countryCode) => {\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      country: countryCode,\n      city: '',\n    }));\n  };\n\n  const handlePhoneNumberChange = (value) => {\n    const formattedPhoneNumber = formatPhoneNumber(value);\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      phoneNumber: formattedPhoneNumber,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Form validation logic\n    if (formData.name.trim() === '') {\n      console.log('Please enter your name.');\n      return;\n    }\n\n    if (formData.email.trim() === '') {\n      console.log('Please enter your email.');\n      return;\n    }\n\n    if (formData.gender === '') {\n      console.log('Please select your gender.');\n      return;\n    }\n\n    if (formData.country === '') {\n      console.log('Please select your country.');\n      return;\n    }\n\n    // if (formData.city === '') {\n    //   console.log('Please select your city.');\n    //   return;\n    // }\n\n    if (formData.phoneNumber.trim() === '') {\n      console.log('Please enter your phone number.');\n      return;\n    }\n\n    // Form submission to server\n    console.log('Form submitted:', formData);\n    // Add your server submission logic here\n\n    // Reset the form\n    setFormData({\n      name: '',\n      email: '',\n      gender: '',\n      country: '',\n      city: '',\n      phoneNumber: '',\n    });\n  };\n\n  return (\n    <div className=\"chat-form-container\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Your Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={formData.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Your E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"gender\">Gender</label>\n          <select\n            id=\"gender\"\n            value={formData.gender}\n            onChange={handleInputChange}\n          >\n            <option value=\"\">Select one</option>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"country\">Country</label>\n          <Select\n            id=\"country\"\n            searchable\n            options={countries}\n            selected={formData.country}\n            onSelect={handleCountrySelect}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"city\">City</label>\n          <select\n            id=\"city\"\n            value={formData.city}\n            onChange={handleInputChange}\n            disabled={!formData.country}\n          >\n            <option value=\"\">Select city</option>\n            {cities.map((city) => (\n              <option key={city} value={city}>\n                {city}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"phoneNumber\">Phone Number</label>\n          <PhoneInput\n            id=\"phoneNumber\"\n            defaultCountry=\"US\"\n            value={formData.phoneNumber}\n            onChange={handlePhoneNumberChange}\n            countrySelectComponent={({ selectedCountry }) => (\n              <div>{selectedCountry ? selectedCountry.code : null}</div>\n            )}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}