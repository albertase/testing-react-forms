{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestfulApi = () => {\n  _s();\n\n  const [country, setCountry] = useState('');\n  const [cities, setCities] = useState([]);\n  const apiKey = 'fed230a6e88686';\n  useEffect(() => {\n    fetchCountry();\n  }, []);\n\n  const fetchCountry = async () => {\n    try {\n      const response = await fetch(`https://ipinfo.io/json?token=${apiKey}`);\n      const data = await response.json(); // Extract the country name from the API response and set it in the state\n\n      const countryName = data.country || '';\n      setCountry(countryName); // Fetch cities using the country name\n\n      if (countryName) {\n        const citiesResponse = await fetch(`https://countries-cities.p.rapidapi.com/location/country/${countryName}/city/list?page=2&per_page=20&population=1501`, {\n          headers: {\n            'X-RapidAPI-Key': 'cc0abd92femshf147bdb212c0658p109b7ejsn6d1a58066eb4',\n            'X-RapidAPI-Host': 'countries-cities.p.rapidapi.com'\n          }\n        });\n        const citiesData = await citiesResponse.json();\n        setCities(citiesData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Country: \", country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      id: \"city\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.name,\n        children: city.name\n      }, city.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RestfulApi, \"mYd74WgxtcIRDtl95UkLy1V134k=\");\n\n_c = RestfulApi;\nexport default RestfulApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi\");","map":{"version":3,"names":["React","useState","useEffect","RestfulApi","country","setCountry","cities","setCities","apiKey","fetchCountry","response","fetch","data","json","countryName","citiesResponse","headers","citiesData","error","console","map","city","name","id"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst RestfulApi = () => {\n    const [country, setCountry] = useState('');\n    const [cities, setCities] = useState([]);\n    const apiKey = 'fed230a6e88686';\n\n    useEffect(() => {\n        fetchCountry();\n    }, []);\n\n    const fetchCountry = async () => {\n        try {\n            const response = await fetch(`https://ipinfo.io/json?token=${apiKey}`);\n            const data = await response.json();\n\n            // Extract the country name from the API response and set it in the state\n            const countryName = data.country || '';\n            setCountry(countryName);\n\n            // Fetch cities using the country name\n            if (countryName) {\n                const citiesResponse = await fetch(`https://countries-cities.p.rapidapi.com/location/country/${countryName}/city/list?page=2&per_page=20&population=1501`, {\n                    headers: {\n                        'X-RapidAPI-Key': 'cc0abd92femshf147bdb212c0658p109b7ejsn6d1a58066eb4',\n                        'X-RapidAPI-Host': 'countries-cities.p.rapidapi.com'\n                    }\n                });\n                const citiesData = await citiesResponse.json();\n                setCities(citiesData);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Country: {country}</h2>\n            <select name=\"city\" id=\"city\">\n                <option value=\"\"></option>\n                {cities.map(city => (\n                    <option key={city.id} value={city.name}>{city.name}</option>\n                ))}\n            </select>\n        </div>\n    );\n};\n\nexport default RestfulApi;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAMO,MAAM,GAAG,gBAAf;EAEAN,SAAS,CAAC,MAAM;IACZO,YAAY;EACf,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,YAAY,GAAG,YAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,MAAO,EAAxC,CAA5B;MACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAFA,CAIA;;MACA,MAAMC,WAAW,GAAGF,IAAI,CAACR,OAAL,IAAgB,EAApC;MACAC,UAAU,CAACS,WAAD,CAAV,CANA,CAQA;;MACA,IAAIA,WAAJ,EAAiB;QACb,MAAMC,cAAc,GAAG,MAAMJ,KAAK,CAAE,4DAA2DG,WAAY,+CAAzE,EAAyH;UACvJE,OAAO,EAAE;YACL,kBAAkB,oDADb;YAEL,mBAAmB;UAFd;QAD8I,CAAzH,CAAlC;QAMA,MAAMC,UAAU,GAAG,MAAMF,cAAc,CAACF,IAAf,EAAzB;QACAN,SAAS,CAACU,UAAD,CAAT;MACH;IACJ,CAnBD,CAmBE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACH;EACJ,CAvBD;;EAyBA,oBACI;IAAA,wBACI;MAAA,wBAAcd,OAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,IAAI,EAAC,MAAb;MAAoB,EAAE,EAAC,MAAvB;MAAA,wBACI;QAAQ,KAAK,EAAC;MAAd;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKE,MAAM,CAACc,GAAP,CAAWC,IAAI,iBACZ;QAAsB,KAAK,EAAEA,IAAI,CAACC,IAAlC;QAAA,UAAyCD,IAAI,CAACC;MAA9C,GAAaD,IAAI,CAACE,EAAlB;QAAA;QAAA;QAAA;MAAA,QADH,CAFL;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA7CD;;GAAMpB,U;;KAAAA,U;AA+CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}