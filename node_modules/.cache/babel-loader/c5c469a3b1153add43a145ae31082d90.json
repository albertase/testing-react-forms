{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/Subscribe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Subscribe.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subscribe = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Perform form validation\n\n    if (!email || !fullName) {\n      alert(\"Please fill in all fields\");\n      return;\n    } // Create a payload object with form data\n\n\n    const payload = {\n      email,\n      full_name: fullName\n    };\n\n    try {\n      // Make a POST request to the endpoint\n      const response = await fetch(\"https://api.elishatofunmi.com/subscribe/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json(); // Handle successful subscription\n\n      console.log(\"Subscription successful:\", data); // Reset form fields\n\n      setEmail(\"\");\n      setFullName(\"\");\n    } catch (error) {\n      // Handle subscription error\n      console.error(\"Subscription error:\", error);\n      alert(\"An error occurred while subscribing\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscribe-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"subscribe-label\",\n        htmlFor: \"email\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"subscribe-input\",\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"fullName-label\",\n          htmlFor: \"Full Name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"fullName-input\",\n          type: \"text\",\n          id: \"fullname\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subscribe-button\",\n          type: \"submit\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Subscribe, \"x/R74PnmJdDrpvyRgQ0Ltr960II=\");\n\n_c = Subscribe;\nexport default Subscribe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscribe\");","map":{"version":3,"names":["React","useState","Subscribe","email","setEmail","fullName","setFullName","handleSubmit","e","preventDefault","alert","payload","full_name","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","target","value"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/Subscribe.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Subscribe.css\";\n\nconst Subscribe = () => {\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Perform form validation\n    if (!email || !fullName) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    // Create a payload object with form data\n    const payload = {\n      email,\n      full_name: fullName,\n    };\n\n    try {\n      // Make a POST request to the endpoint\n      const response = await fetch(\n        \"https://api.elishatofunmi.com/subscribe/add\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(payload),\n        }\n      );\n\n      const data = await response.json();\n\n      // Handle successful subscription\n      console.log(\"Subscription successful:\", data);\n\n      // Reset form fields\n      setEmail(\"\");\n      setFullName(\"\");\n    } catch (error) {\n      // Handle subscription error\n      console.error(\"Subscription error:\", error);\n      alert(\"An error occurred while subscribing\");\n    }\n  };\n\n  return (\n    <div className=\"subscribe-container\">\n      <form onSubmit={handleSubmit}>\n        <label className=\"subscribe-label\" htmlFor=\"email\">\n          Subscribe\n        </label>\n        <input\n          className=\"subscribe-input\"\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <div>\n          <label className=\"fullName-label\" htmlFor=\"Full Name\">\n            Full Name\n          </label>\n          <input\n            className=\"fullName-input\"\n            type=\"text\"\n            id=\"fullname\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n          />\n        </div>\n        <div>\n          <button className=\"subscribe-button\" type=\"submit\">\n            Subscribe\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Subscribe;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF,GADgC,CAGhC;;IACA,IAAI,CAACN,KAAD,IAAU,CAACE,QAAf,EAAyB;MACvBK,KAAK,CAAC,2BAAD,CAAL;MACA;IACD,CAP+B,CAShC;;;IACA,MAAMC,OAAO,GAAG;MACdR,KADc;MAEdS,SAAS,EAAEP;IAFG,CAAhB;;IAKA,IAAI;MACF;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAD0B,EAE1B;QACEC,MAAM,EAAE,MADV;QAEEC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFX;QAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;MALR,CAF0B,CAA5B;MAWA,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB,CAbE,CAeF;;MACAC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCH,IAAxC,EAhBE,CAkBF;;MACAhB,QAAQ,CAAC,EAAD,CAAR;MACAE,WAAW,CAAC,EAAD,CAAX;IACD,CArBD,CAqBE,OAAOkB,KAAP,EAAc;MACd;MACAF,OAAO,CAACE,KAAR,CAAc,qBAAd,EAAqCA,KAArC;MACAd,KAAK,CAAC,qCAAD,CAAL;IACD;EACF,CAzCD;;EA2CA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA,uBACE;MAAM,QAAQ,EAAEH,YAAhB;MAAA,wBACE;QAAO,SAAS,EAAC,iBAAjB;QAAmC,OAAO,EAAC,OAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QACE,SAAS,EAAC,iBADZ;QAEE,IAAI,EAAC,OAFP;QAGE,EAAE,EAAC,OAHL;QAIE,KAAK,EAAEJ,KAJT;QAKE,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV;MAL3B;QAAA;QAAA;QAAA;MAAA,QAJF,eAWE;QAAA,wBACE;UAAO,SAAS,EAAC,gBAAjB;UAAkC,OAAO,EAAC,WAA1C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UACE,SAAS,EAAC,gBADZ;UAEE,IAAI,EAAC,MAFP;UAGE,EAAE,EAAC,UAHL;UAIE,KAAK,EAAErB,QAJT;UAKE,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACiB,MAAF,CAASC,KAAV;QAL9B;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAuBE;QAAA,uBACE;UAAQ,SAAS,EAAC,kBAAlB;UAAqC,IAAI,EAAC,QAA1C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAvBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAhFD;;GAAMxB,S;;KAAAA,S;AAkFN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}