{"ast":null,"code":"export const findEntryByCode = (source, code) => {\n  if (code && source != null) {\n    const codex = source.findIndex(c => {\n      return c.isoCode === code;\n    });\n    return codex !== -1 ? source[codex] : undefined;\n  }\n\n  return undefined;\n};\nexport const findStateByCodeAndCountryCode = (source, code, countryCode) => {\n  if (code && countryCode && source != null) {\n    const codex = source.findIndex(c => {\n      return c.isoCode === code && c.countryCode === countryCode;\n    });\n    return codex !== -1 ? source[codex] : undefined;\n  }\n\n  return undefined;\n};\nexport function defaultKeyToCompare(entity) {\n  return entity.name;\n}\nexport const compare = function (a, b) {\n  let keyToCompare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultKeyToCompare;\n  if (keyToCompare(a) < keyToCompare(b)) return -1;\n  if (keyToCompare(a) > keyToCompare(b)) return 1;\n  return 0;\n};","map":{"version":3,"names":["findEntryByCode","source","code","codex","findIndex","c","isoCode","undefined","findStateByCodeAndCountryCode","countryCode","defaultKeyToCompare","entity","name","compare","a","b","keyToCompare"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/country-state-city/lib/utils/index.js"],"sourcesContent":["export const findEntryByCode = (source, code) => {\n    if (code && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport const findStateByCodeAndCountryCode = (source, code, countryCode) => {\n    if (code && countryCode && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code && c.countryCode === countryCode;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport function defaultKeyToCompare(entity) {\n    return entity.name;\n}\nexport const compare = (a, b, \n// eslint-disable-next-line no-unused-vars\nkeyToCompare = defaultKeyToCompare) => {\n    if (keyToCompare(a) < keyToCompare(b))\n        return -1;\n    if (keyToCompare(a) > keyToCompare(b))\n        return 1;\n    return 0;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;EAC7C,IAAIA,IAAI,IAAID,MAAM,IAAI,IAAtB,EAA4B;IACxB,MAAME,KAAK,GAAGF,MAAM,CAACG,SAAP,CAAkBC,CAAD,IAAO;MAClC,OAAOA,CAAC,CAACC,OAAF,KAAcJ,IAArB;IACH,CAFa,CAAd;IAGA,OAAOC,KAAK,KAAK,CAAC,CAAX,GAAeF,MAAM,CAACE,KAAD,CAArB,GAA+BI,SAAtC;EACH;;EACD,OAAOA,SAAP;AACH,CARM;AASP,OAAO,MAAMC,6BAA6B,GAAG,CAACP,MAAD,EAASC,IAAT,EAAeO,WAAf,KAA+B;EACxE,IAAIP,IAAI,IAAIO,WAAR,IAAuBR,MAAM,IAAI,IAArC,EAA2C;IACvC,MAAME,KAAK,GAAGF,MAAM,CAACG,SAAP,CAAkBC,CAAD,IAAO;MAClC,OAAOA,CAAC,CAACC,OAAF,KAAcJ,IAAd,IAAsBG,CAAC,CAACI,WAAF,KAAkBA,WAA/C;IACH,CAFa,CAAd;IAGA,OAAON,KAAK,KAAK,CAAC,CAAX,GAAeF,MAAM,CAACE,KAAD,CAArB,GAA+BI,SAAtC;EACH;;EACD,OAAOA,SAAP;AACH,CARM;AASP,OAAO,SAASG,mBAAT,CAA6BC,MAA7B,EAAqC;EACxC,OAAOA,MAAM,CAACC,IAAd;AACH;AACD,OAAO,MAAMC,OAAO,GAAG,UAACC,CAAD,EAAIC,CAAJ,EAEgB;EAAA,IAAvCC,YAAuC,uEAAxBN,mBAAwB;EACnC,IAAIM,YAAY,CAACF,CAAD,CAAZ,GAAkBE,YAAY,CAACD,CAAD,CAAlC,EACI,OAAO,CAAC,CAAR;EACJ,IAAIC,YAAY,CAACF,CAAD,CAAZ,GAAkBE,YAAY,CAACD,CAAD,CAAlC,EACI,OAAO,CAAP;EACJ,OAAO,CAAP;AACH,CARM"},"metadata":{},"sourceType":"module"}