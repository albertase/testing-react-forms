{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nameValidation = value => {\n  return value.trim() !== '' && value.trim().length > 6;\n};\n\nconst emailValidation = value => {\n  return value.includes('@') && value.includes('');\n};\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(nameValidation);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput();\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"e44mC54fAUa+iPZZWG7SO2ETbXs=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","nameValidation","value","trim","length","emailValidation","includes","SimpleInput","props","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","formSubmissionHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/SimpleInput.js"],"sourcesContent":["import useInput from '../hooks/use-input';\n\n\nconst nameValidation = value => {\n  return value.trim() !== '' && value.trim().length > 6;\n}\n\n\nconst emailValidation = value => {\n  return  value.includes('@') && value.includes('')\n}\n\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(nameValidation);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput();\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    // nameInputRef.current.value = ''; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className='error-text'>Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your E-Mail</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className='error-text'>Please enter a valid email.</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAGA,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC9B,OAAOA,KAAK,CAACC,IAAN,OAAiB,EAAjB,IAAuBD,KAAK,CAACC,IAAN,GAAaC,MAAb,GAAsB,CAApD;AACD,CAFD;;AAKA,MAAMC,eAAe,GAAGH,KAAK,IAAI;EAC/B,OAAQA,KAAK,CAACI,QAAN,CAAe,GAAf,KAAuBJ,KAAK,CAACI,QAAN,CAAe,EAAf,CAA/B;AACD,CAFD;;AAKA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJN,KAAK,EAAEO,WADH;IAEJC,OAAO,EAAEC,kBAFL;IAGJC,QAAQ,EAAEC,iBAHN;IAIJC,kBAAkB,EAAEC,kBAJhB;IAKJC,gBAAgB,EAAEC,eALd;IAMJC,KAAK,EAAEC;EANH,IAOFnB,QAAQ,CAACC,cAAD,CAPZ;EASA,MAAM;IACJC,KAAK,EAAEkB,YADH;IAEJV,OAAO,EAAEW,mBAFL;IAGJT,QAAQ,EAAEU,kBAHN;IAIJR,kBAAkB,EAAES,kBAJhB;IAKJP,gBAAgB,EAAEQ,gBALd;IAMJN,KAAK,EAAEO;EANH,IAOFzB,QAAQ,EAPZ;EASA,IAAI0B,WAAW,GAAG,KAAlB;;EAEA,IAAIf,kBAAkB,IAAIU,mBAA1B,EAA+C;IAC7CK,WAAW,GAAG,IAAd;EACD;;EAED,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;IACvCA,KAAK,CAACC,cAAN;;IAEA,IAAI,CAAClB,kBAAL,EAAyB;MACvB;IACD;;IAEDmB,OAAO,CAACC,GAAR,CAAYtB,WAAZ,EAPuC,CASvC;;IACAU,cAAc;IACdM,eAAe;EAChB,CAZD;;EAcA,MAAMO,gBAAgB,GAAGnB,iBAAiB,GACtC,sBADsC,GAEtC,cAFJ;EAIA,MAAMoB,iBAAiB,GAAGX,kBAAkB,GACxC,sBADwC,GAExC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEK,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEjB,kBAHZ;QAIE,MAAM,EAAEE,eAJV;QAKE,KAAK,EAAER;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGI,iBAAiB,iBAChB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAEoB,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEV,kBAHZ;QAIE,MAAM,EAAEC,gBAJV;QAKE,KAAK,EAAEJ;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGE,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eA2BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACI,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAhFD;;GAAMnB,W;UAQAP,Q,EASAA,Q;;;KAjBAO,W;AAkFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}