{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestfulApi = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    const fetchCities = async () => {\n      const apiKey = 'cc0abd92femshf147bdb212c0658p109b7ejsn6d1a58066eb4';\n      const apiUrl = 'https://countries-cities.p.rapidapi.com/location/country/US/city/list';\n\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': apiKey,\n            'X-RapidAPI-Host': 'countries-cities.p.rapidapi.com'\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch cities');\n        }\n\n        const data = await response.json();\n        setCities(data.cities);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCities();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      id: \"city\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.name,\n        children: city.name\n      }, city.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestfulApi, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n\n_c = RestfulApi;\nexport default RestfulApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestfulApi\");","map":{"version":3,"names":["React","useState","useEffect","RestfulApi","cities","setCities","fetchCities","apiKey","apiUrl","response","fetch","method","headers","ok","Error","data","json","error","console","map","city","name","id"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst RestfulApi = () => {\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      const apiKey = 'cc0abd92femshf147bdb212c0658p109b7ejsn6d1a58066eb4';\n      const apiUrl = 'https://countries-cities.p.rapidapi.com/location/country/US/city/list';\n\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': apiKey,\n            'X-RapidAPI-Host': 'countries-cities.p.rapidapi.com'\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch cities');\n        }\n\n        const data = await response.json();\n        setCities(data.cities);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  return (\n    <div>\n      <select name=\"city\" id=\"city\">\n        <option value=\"\">Select a city</option>\n        {cities.map(city => (\n          <option key={city.id} value={city.name}>\n            {city.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default RestfulApi;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMI,WAAW,GAAG,YAAY;MAC9B,MAAMC,MAAM,GAAG,oDAAf;MACA,MAAMC,MAAM,GAAG,uEAAf;;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAD,EAAS;UACnCG,MAAM,EAAE,KAD2B;UAEnCC,OAAO,EAAE;YACP,kBAAkBL,MADX;YAEP,mBAAmB;UAFZ;QAF0B,CAAT,CAA5B;;QAQA,IAAI,CAACE,QAAQ,CAACI,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;QACD;;QAED,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;QACAX,SAAS,CAACU,IAAI,CAACX,MAAN,CAAT;MACD,CAfD,CAeE,OAAOa,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACD;IACF,CAtBD;;IAwBAX,WAAW;EACZ,CA1BQ,EA0BN,EA1BM,CAAT;EA4BA,oBACE;IAAA,uBACE;MAAQ,IAAI,EAAC,MAAb;MAAoB,EAAE,EAAC,MAAvB;MAAA,wBACE;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGF,MAAM,CAACe,GAAP,CAAWC,IAAI,iBACd;QAAsB,KAAK,EAAEA,IAAI,CAACC,IAAlC;QAAA,UACGD,IAAI,CAACC;MADR,GAAaD,IAAI,CAACE,EAAlB;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA3CD;;GAAMnB,U;;KAAAA,U;AA6CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}