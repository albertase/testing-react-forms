{"ast":null,"code":"import _slicedToArray from\"/home/albert/Desktop/albert.com/the-complete-react/react-form/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Country,City}from'country-state-city';import FlagsSelect from'react-flags-select';// import 'react-flags-select/css/react-flags-select.css';\nimport Select from'react-select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RestfulApi2=function RestfulApi2(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),selectedCountry=_useState2[0],setSelectedCountry=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),selectedCity=_useState4[0],setSelectedCity=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cities=_useState6[0],setCities=_useState6[1];var handleCountryChange=function handleCountryChange(countryCode){setSelectedCountry(countryCode);setSelectedCity('');// Get cities of the selected country\nvar countryCities=City.getCitiesOfCountry(countryCode);setCities(countryCities);};var handleCityChange=function handleCityChange(selectedOption){setSelectedCity(selectedOption?selectedOption.value:'');};var countries=Country.getAllCountries();var cityOptions=cities.map(function(city){return{value:city.name,label:city.name};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(FlagsSelect,{className:\"country-select\",countries:countries.map(function(country){return country.isoCode;}),onSelect:function onSelect(countryCode){return handleCountryChange(countryCode);},selected:selectedCountry,searchable:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(Select,{options:cityOptions,value:cityOptions.find(function(option){return option.value===selectedCity;}),onChange:handleCityChange,isSearchable:true})]})]});};export default RestfulApi2;","map":{"version":3,"names":["React","useState","Country","City","FlagsSelect","Select","RestfulApi2","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","cities","setCities","handleCountryChange","countryCode","countryCities","getCitiesOfCountry","handleCityChange","selectedOption","value","countries","getAllCountries","cityOptions","map","city","name","label","country","isoCode","find","option"],"sources":["/home/albert/Desktop/albert.com/the-complete-react/react-form/src/components/RestfulApi3.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Country, City } from 'country-state-city';\nimport FlagsSelect from 'react-flags-select';\n// import 'react-flags-select/css/react-flags-select.css';\nimport Select from 'react-select';\n\nconst RestfulApi2 = () => {\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [cities, setCities] = useState([]);\n\n  const handleCountryChange = (countryCode) => {\n    setSelectedCountry(countryCode);\n    setSelectedCity('');\n\n    // Get cities of the selected country\n    const countryCities = City.getCitiesOfCountry(countryCode);\n    setCities(countryCities);\n  };\n\n  const handleCityChange = (selectedOption) => {\n    setSelectedCity(selectedOption ? selectedOption.value : '');\n  };\n\n  const countries = Country.getAllCountries();\n  const cityOptions = cities.map((city) => ({ value: city.name, label: city.name }));\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"country\">Country</label>\n        <FlagsSelect\n          className=\"country-select\"\n          countries={countries.map((country) => country.isoCode)}\n          onSelect={(countryCode) => handleCountryChange(countryCode)}\n          selected={selectedCountry}\n          searchable={true}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"city\">City</label>\n        <Select\n          options={cityOptions}\n          value={cityOptions.find((option) => option.value === selectedCity)}\n          onChange={handleCityChange}\n          isSearchable={true}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RestfulApi2;\n"],"mappings":"mJAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,CAAkBC,IAAlB,KAA8B,oBAA9B,CACA,MAAOC,YAAP,KAAwB,oBAAxB,CACA;AACA,MAAOC,OAAP,KAAmB,cAAnB,C,wFAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACxB,cAA8CL,QAAQ,CAAC,EAAD,CAAtD,wCAAOM,eAAP,eAAwBC,kBAAxB,eACA,eAAwCP,QAAQ,CAAC,EAAD,CAAhD,yCAAOQ,YAAP,eAAqBC,eAArB,eACA,eAA4BT,QAAQ,CAAC,EAAD,CAApC,yCAAOU,MAAP,eAAeC,SAAf,eAEA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,WAAD,CAAiB,CAC3CN,kBAAkB,CAACM,WAAD,CAAlB,CACAJ,eAAe,CAAC,EAAD,CAAf,CAEA;AACA,GAAMK,cAAa,CAAGZ,IAAI,CAACa,kBAAL,CAAwBF,WAAxB,CAAtB,CACAF,SAAS,CAACG,aAAD,CAAT,CACD,CAPD,CASA,GAAME,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,cAAD,CAAoB,CAC3CR,eAAe,CAACQ,cAAc,CAAGA,cAAc,CAACC,KAAlB,CAA0B,EAAzC,CAAf,CACD,CAFD,CAIA,GAAMC,UAAS,CAAGlB,OAAO,CAACmB,eAAR,EAAlB,CACA,GAAMC,YAAW,CAAGX,MAAM,CAACY,GAAP,CAAW,SAACC,IAAD,QAAW,CAAEL,KAAK,CAAEK,IAAI,CAACC,IAAd,CAAoBC,KAAK,CAAEF,IAAI,CAACC,IAAhC,CAAX,EAAX,CAApB,CAEA,mBACE,oCACE,oCACE,cAAO,OAAO,CAAC,SAAf,qBADF,cAEE,KAAC,WAAD,EACE,SAAS,CAAC,gBADZ,CAEE,SAAS,CAAEL,SAAS,CAACG,GAAV,CAAc,SAACI,OAAD,QAAaA,QAAO,CAACC,OAArB,EAAd,CAFb,CAGE,QAAQ,CAAE,kBAACd,WAAD,QAAiBD,oBAAmB,CAACC,WAAD,CAApC,EAHZ,CAIE,QAAQ,CAAEP,eAJZ,CAKE,UAAU,CAAE,IALd,EAFF,GADF,cAWE,oCACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAEe,WADX,CAEE,KAAK,CAAEA,WAAW,CAACO,IAAZ,CAAiB,SAACC,MAAD,QAAYA,OAAM,CAACX,KAAP,GAAiBV,YAA7B,EAAjB,CAFT,CAGE,QAAQ,CAAEQ,gBAHZ,CAIE,YAAY,CAAE,IAJhB,EAFF,GAXF,GADF,CAuBD,CA5CD,CA8CA,cAAeX,YAAf"},"metadata":{},"sourceType":"module"}